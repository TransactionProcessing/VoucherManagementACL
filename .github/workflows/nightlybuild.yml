name: Nightly Build

on:
  schedule:
  - cron: "10 23 * * *"
  repository_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      commitcount: ${{ steps.commitswithintime.outputs.number-of-commits-within-time }}
    steps:
      - uses: actions/checkout@v2
        #with:
          #fetch-depth: 0

      - name: Check for commits within time 
        uses: TransactionProcessing/CommitsWithinTime@1.0.0
        id: commitswithintime
        with:
          hours: 24
          
      - name: Get the output from CommitsWithinTime
        run: |
          echo "The 'has-new-commits-within-time' value is ${{ steps.commitswithintime.outputs.has-new-commits-within-time }}"
          echo "The 'number-of-commits-within-time' value is ${{ steps.commitswithintime.outputs.number-of-commits-within-time }}"
          echo "The 'total-commits' value is ${{ steps.commitswithintime.outputs.total-commits }}"

  build:
    name: "Nightly Build"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    needs: check
    if: ${{ needs.check.outputs.commitcount > 0 }}

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Set Up Variables
      run: echo "action_url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV
      
    - name: Restore Nuget Packages
      run: dotnet restore VoucherManagementACL.sln --source https://api.nuget.org/v3/index.json --source https://www.myget.org/F/transactionprocessing/api/v3/index.json

    - name: Build Code
      run: dotnet build VoucherManagementACL.sln --configuration Release
        
    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "VoucherManagementACL.Tests\VoucherManagementACL.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov1.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"                        
        dotnet test "VoucherManagementACL.BusinessLogic.Tests\VoucherManagementACL.BusinessLogic.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov2.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"                
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3  
      with:
        files: ./lcov1.info,./lcov2.info 
        
    - name: Build Docker Image
      run: docker build . --file VoucherManagementACL/dockerfile --tag vouchermanagementacl:latest

    - name: Run Integration Tests
      run: dotnet test "VoucherManagementACL.IntegrationTests\VoucherManagementACL.IntegrationTests.csproj"

    - uses: dacbd/create-issue-action@main
      if: ${{ failure() }}
      name: Create an issue on build failure
      with:
        title: Investigate Nightly Build Failure
        token: ${{secrets.GITHUB_TOKEN}}
        labels: nightlybuild
        body: Url is ${{env.action_url}}
